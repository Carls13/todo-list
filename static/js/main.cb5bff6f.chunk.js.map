{"version":3,"sources":["components/Navigation.js","components/ToDoForm.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","href","this","props","length","Component","ToDoForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","title","responsible","description","priority","handleInput","bind","assertThisInitialized","handleSubmit","e","_e$target","target","value","name","setState","defineProperty","preventDefault","onAddToDo","onSubmit","type","onChange","placeholder","App","todos","handleAddToDo","todo","concat","toConsumableArray","index","console","log","filter","i","_this2","map","onClick","removeToDo","components_Navigation","components_ToDoForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb5bff6f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Navigation extends Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<nav className=\"navbar navbar-dark bg-dark\">\r\n            \t<a href=\"\" className=\"text-white\">Tasks</a>\r\n            \t<span className=\"badge badge-pill badge-light ml-2\">\r\n            \t\t{this.props.length}\r\n            \t</span>\r\n          \t</nav>\r\n\t\t\t)\r\n\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react'\r\n\r\nclass ToDoForm extends Component {\r\n\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\ttitle: '',\r\n\t\t\tresponsible: '',\r\n\t\t\tdescription: '',\r\n\t\t\tpriority: 'Low',\r\n\t\t};\r\n\t\tthis.handleInput = this.handleInput.bind(this)\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\r\n\t}\r\n\r\n\thandleInput(e) {\r\n\t\tconst { value, name } = e.target;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t})\t\r\n\t}\r\n\r\n\thandleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onAddToDo(this.state);\r\n\t}\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"col-md-3 mt-4\">\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"card-header\">\r\n\t              <h3>Add a new ToDo</h3>\r\n\t            </div>\r\n\t            <form className=\"card-body\" onSubmit={this.handleSubmit}>\r\n\t            \t<div className=\"form-group\">\r\n\t            \t\t<input \r\n\t            \t\t\ttype='text'\r\n\t            \t\t\tname='title'\r\n\t            \t\t\tonChange={this.handleInput}\r\n\t            \t\t\tclassName='form-control'\r\n\t            \t\t\tplaceholder='Title'\r\n\t            \t\t/>\r\n\t            \t</div>\r\n\t            \t<div className=\"form-group\">\r\n\t            \t\t<input \r\n\t            \t\t\ttype='text'\r\n\t            \t\t\tname='responsible'\r\n\t            \t\t\tonChange={this.handleInput}\r\n\t            \t\t\tclassName='form-control'\r\n\t            \t\t\tplaceholder='Responsible'\r\n\t            \t\t/>\r\n\t            \t</div>\r\n\t            \t<div className=\"form-group\">\r\n\t            \t\t<input \r\n\t            \t\t\ttype='text'\r\n\t            \t\t\tname='description'\r\n\t            \t\t\tonChange={this.handleInput}\r\n\t            \t\t\tclassName='form-control'\r\n\t            \t\t\tplaceholder='Description'\r\n\t            \t\t/>\r\n\t            \t</div>\r\n\t            \t<div className=\"form-group\">\r\n\t            \t\t<select\r\n\t            \t\t\tname='priority'\r\n\t            \t\t\tonChange={this.handleInput}\r\n\t            \t\t\tclassName='form-control'>\r\n\t            \t\t\t<option>Low</option>\r\n\t            \t\t\t<option>Medium</option>\r\n\t            \t\t\t<option>High</option>\r\n\t            \t\t</select>\r\n\t            \t</div>\r\n\t            \t<button className=\"btn btn-blue\">Add</button>\r\n\t            </form>\r\n\t              \r\n          </div>\r\n          </div>\r\n\t\t\t)\r\n\r\n\t}\r\n}\r\n\r\nexport default ToDoForm;","import React, { Component } from 'react';\nimport {todos} from './todos.json';\nimport Navigation from './components/Navigation.js';\nimport ToDoForm from './components/ToDoForm.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      todos\n    }\n    this.handleAddToDo = this.handleAddToDo.bind(this)\n  }\n\n  handleAddToDo(todo) {\n    this.setState({\n      todos: [...this.state.todos, todo]\n    })\n  }\n\n  removeToDo(index) {\n    console.log(index)\n    this.setState({\n      todos: this.state.todos.filter((e,i)=>{\n        return i !== index\n      })\n    })\n\n  }\n\n  render() {\n    const todos = this.state.todos.map((todo, i) => {\n      return (\n        <div className=\"col-md-3 mt-4\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3>{ todo.title }</h3>\n              <span className=\"badge badge-pill badge-danger ml-2\">\n                <p>{ todo.priority }</p>\n              </span>\n            </div>\n            <div className=\"card-body\">\n              <p>{ todo.description }</p>\n                <p><strong>{ todo.responsible }</strong></p>\n            </div>\n            <div className=\"card-footer\">\n              <button className=\"btn btn-danger\" \n              onClick={this.removeToDo.bind(this, i)} >\n              Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )\n    })\n\n    return (<div className=\"App\">\n\n          <Navigation length={this.state.todos.length}/>\n          <div className=\"container\">\n            <div className=\"row mt-4\">\n              <ToDoForm onAddToDo={this.handleAddToDo}/>\n              { todos }\n            </div>\n          </div>\n          </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}